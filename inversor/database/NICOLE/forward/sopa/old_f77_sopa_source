      REAL*8 FUNCTION AHMBF(THETA,FREQ)                                 
      TH=THETA                                                          
      FR=FREQ  
	AHMBF = 0.0                                                        
      W=2.9979E15/FR                                                   
      XL=16.419-W                                                      
	IF(XL) 34,36,36                                                  
   34 AHMBF=0.0                                                        
      GO TO 50                                                          
   36 IF(W-14.2) 44,44,40                                              
   40 XK=(0.269818+(0.220190+(-0.0411288+0.00273236*XL)*                
     ,XL)*XL)*XL         
      GO TO 45    
   44 XK=0.00680133+(0.17878708+(0.16479+(-0.0204842+                   
     ,5.95244E-4*W)*W)*W)*W                                             
   45 AHMBF=XK*0.4158*TH**2*SQRT(TH)*EXP(1.737*TH)
   50 RETURN                                                            
      END                                                              
      REAL*8 FUNCTION AHMFF(THETA,FREQ)                                 
      TH=THETA                                                          
      FR=FREQ                                                           
      W=2.9979E15/FR                                                    
      A=0.0053666+(-0.011493+0.027039*TH)*TH                            
      B=-3.2062+(11.924-5.939*TH)*TH                                   
      C=-0.40192+(7.0355-0.34592*TH)*TH                                 
      AHMFF=A+(B+C*W)*W/1000.0                                          
      RETURN                                                            
      END                                                               
      BLOCK DATA BMCONST
C
C BMCONST 96-01-03  is taken from:
C   MULTI version 2.0 (MATS CARLSSON)
C        

C
      COMMON/CCONST/ EE,HH,CC,BK,EM,UU,HCE,HC2,HCK,EK,PI
C
      DATA EE/1.602189E-12/,HH/6.626176E-27/,CC/2.99792458E10/,
     * EM/9.109534E-28/,UU/1.6605655E-24/,BK/1.380662E-16/,
     * PI/3.14159265359/
C
      END
C
C***********************************************************************
C
      SUBROUTINE CHIG(ID,FREQ,CHIOLD,CHIE,ETAOLD)
C
C FM is a fudge factor for bf metal opacity
C FH is a fudge factor for bf+ff H(-)  opacity
C
C IAC, 30.05.96 I use FM and FH from Jo Bruls thesis, p.20
C
C FH & FM are calculated in SCHIFAST
C
      PARAMETER (MDEP=1,MK=1,MFT=1)  
C            INCLUDE 'PARAMAX'
C                      
c Hector: I'm hardwiring the IFUDGE value 
      Parameter (IFUDGE=1)
      REAL*8 H2PKUR,AHMFF,GFREE,AHMBF,GAUNT,OPMET,SCATL
      REAL*8 SIGKK,SIGH,CONT,SM,GF,CFF,CNEG,CMET,STIM
      REAL*8 HKT,SRT,EX,BCO1,BCO,XX,EXF,B
      REAL NE,NATOM,NHYD,NP,M                                           
      DIMENSION NBELO1(2,25)                                  
      COMMON V(10300)                                                   
C
      COMMON/BION/ BM(MDEP,30)
C 
      COMMON/CKOEF/ DLOICH(MDEP),DLOATE(MDEP)
C                               
      COMMON/OPAC/ M(MDEP),RHO(MDEP),EIHC(MFT),GIS(MFT),QERF(MFT),          
     ,WT(MFT),PHOTO(MFT),NXTION(MK),BNU(MFT)
C                            
      COMMON/MODEL/ NE(MDEP),TEMP(MDEP),PE(MDEP),NATOM(MDEP)
C                    
      COMMON/POPUL/ HTOT(MDEP),NHYD(5,MDEP),NP(MDEP)
C 
c Hector: I comment out this line      COMMON/FUDGE/ IFUDGE
C                        
      EQUIVALENCE(V(2101),NBELO1(1))                    
      DATA NLH/5/  

        FH=1.0
        FM=1.0
          IF(IFUDGE.EQ.0) GO TO 1
C
C  Lambda W in A
C
          W=2.99792458E18/FREQ 
      
C-----------------------------------------------------
C Fudge factor for negative hydrogen - FH
C-----------------------------------------------------
      IF(W.LT.2080.) FH=1.
 
      IF(W.GE.2080. .AND. W.LT.2300.) THEN
       FH=7.5-(7.5-3.5)*(W-2080.)/(2300.-2080.)
      ENDIF 

      IF(W.GE.2300. .AND. W.LT.2500.) THEN
       FH=3.5-(3.5-2.5)*(W-2300.)/(2500.-2300.)
      ENDIF

      IF(W.GE.2500. .AND. W.LT.2650.) THEN
       FH=5.4-(5.4-5.)*(W-2500.)/(2650.-2500.)
      ENDIF

      IF(W.GE.2650. .AND. W.LT.3000.) THEN
       FH=2.5-(2.5-1.5)*(W-2650.)/(3000.-2650.)
      ENDIF

      IF(W.GE.3000. .AND. W.LT.4200.) THEN
       FH=1.5-(1.5-1.)*(W-3000.)/(4200.-3000.)
      ENDIF


      IF(W.GE.4200.) FH=1. 

C
C-----------------------------------------------------
C Fudge factor for BF metals  - FM
C----------------------------------------------------- 
      IF(W.LT.1536.) FM=1.

      IF(W.GE.1536. .AND. W.LT.1679.) FM=2.

      IF(W.GE.1679. .AND. W.LT.1850.) THEN
       FM=21.-(21.-11.)*(W-1679.)/(1850.-1679.)
      ENDIF

      IF(W.GE.1850. .AND. W.LT.1964.) THEN
        FM=2.2-(2.2-2.)*(W-1850.)/(1964.-1850.)
       ENDIF

      IF(W.GE.1964. .AND. W.LT.2080.) THEN
        FM=2.5-(2.5-2.)*(W-1964.)/(2080.-1964.)
      ENDIF

      IF(W.GE.2080.) FM=1.

C----------------------------------------------------    
C
C       print FM and FH
C
C          IF(ID.EQ.1) THEN
C          IF(W.GE.2100 .AND. W.LE.3000) WRITE(6,*) 'FH=',FH,W 
C          IF(W.GE.1400 .AND. W.LE.2100) WRITE(6,*) 'FM=',FM,W
C          ENDIF
                                               
    1      SM=0.0                                                            
      CONT=0.0                                                        
      HKT=157896./3.2901D15/TEMP(ID)                                   
      SRT=1.0/SQRT(TEMP(ID))                                           
      THETA=5040./TEMP(ID)                                            
      XX=HKT*FREQ
      EX=DEXP(XX)                                                       
      BCO1=1.474527D-2*(1.0D-15*FREQ)**3                               
      BCO=BCO1/(EX-1.0)                                                       
C*****OPACITY FOR NEGATIVE H(FF) AND MOLECULE H2+(TOTAL)  
C
C     FF(H-) Multiply by fuge factor FH
C ----------------------------------------
             
      CHIOLD=NHYD(1,ID)*(AHMFF(THETA,FREQ)*1.0E-26*PE(ID)*FH+             
     ,NP(ID)*H2PKUR(TEMP(ID),FREQ))/RHO(ID)                             
      CHFF=CHIOLD                                                      
C*****OPACITY FOR NEUTRAL H(FF)                                       
      FRQO=3.29E15/36.0                                                 
      FF=AMIN1(FRQO,FREQ)                                               
      SIGKK=3.6919D8/FREQ/FREQ**2                                      
      GF=GFREE(FREQ,TEMP(ID))                                          
      XX=HKT*FF
      EXF=DEXP(XX)                                                       
      EX=1.0/EX                                                         
      CFF=SIGKK*SRT*(GF-1.0+EXF)*NE(ID)*NP(ID)*(1.0-EX)/RHO(ID)       
      CHIOLD=CHIOLD+CFF                                                
C*****EMISSION FOR H-(FF),H2+,H0(FF)                                    
      ETAOLD=BCO*CHIOLD                                               
      SIGH=0.0                                                          
C*****OPACITY FOR NEUTRAL H(BF)                                       
      DO 13 IL=1,NLH                                                    
      FEDGE=3.29E15/FLOAT(IL*IL)                                        
      IF(FREQ.LT.FEDGE) GO TO 13                                      
      X=IL**5                                                          
      IF(IL.LE.NBELO1(2,1)) GO TO 51                                    
      B=1.0                                                            
      GO TO 551                                                        
   51 NN=NBELO1(1,1)+IL                                                 
      B=BM(ID,NN)                                                      
  551 SIGH=(2.815D29/FREQ**2)*GAUNT(IL,FREQ)/X/FREQ                    
      STIM=1.0-EX/B                                                     
      CONT=SIGH*NHYD(IL,ID)*STIM/RHO(ID)                               
      SM=CONT+SM                                                        
      CHIOLD=CHIOLD+CONT                                               
      ETAOLD=ETAOLD+SIGH*NHYD(IL,ID)*                                   
     ,BCO1*EX/B/RHO(ID)                                                 
   13 CONTINUE                                                        
      CONT=SM                                                           
C*****OPACITY FOR NEGATIVE H(BF) 
C
C     BF(H-) Multiply by fuge factor FH
C ----------------------------------------
                                      
      IF(NBELO1(1,1).EQ.0) GO TO 14                                   
      B=BM(ID,1)                                                        
      GO TO 15                                                          
   14 B=1.0                                                             
   15 STIM=(B-EX)*1.0D-26                                              
      CNEG=NHYD(1,ID)*PE(ID)*AHMBF(THETA,FREQ)*STIM*FH/RHO(ID)            
      CHIOLD=CHIOLD+CNEG                                               
      ETAOLD=ETAOLD+CNEG*BCO1*EX/(B-EX)                                
C*****OPACITY FOR METALS(SI,AL,MG,C,FE) 
C
C     BF(Metals) Multiply by fuge factor FM
C ----------------------------------------
                               
      CMET=HTOT(ID)*1.0D-18*FM*OPMET(ID,FREQ,.FALSE.)/RHO(ID)              
      CHIOLD=CHIOLD+CMET                                               
      ETAOLD=ETAOLD+HTOT(ID)*1.0D-18*EX*BCO1*FM*                         
     ,OPMET(ID,FREQ,.TRUE.)/RHO(ID)                                    
C*****SCATTERING ON ELECTRONS AND HI                                    
      CHIE=(6.65D-25*NE(ID)+SCATL(FREQ)*NHYD(1,ID))/RHO(ID)           
      DLOICH(ID)=CHIOLD+CHIE                                            
      DLOATE(ID)=ETAOLD                                                
      RETURN                                                           
      END                                                             
      SUBROUTINE EVAL(XO,YO)                                            00001600
      COMMON A(250),B(250),X(250),Y(250),N,DUMMY(9299)                  00001700
      IL=1                                                              00001800
      IF(XO.LT.X(IL)) IL=1                                              00001900
      IF(XO.LT.X(1)) GO TO 4                                            00002000
      IF(XO.LT.X(IL+1)) GO TO 4                                         00002100
    5 IL=IL+1                                                           00002200
      DO 2 I=IL,N                                                       00002300
      IF(X(I).GE.XO) GO TO 3                                            00002400
    2 CONTINUE                                                          00002500
      I=N                                                               00002600
    3 IL=I-1                                                            00002700
    4 YO=A(IL)*XO+B(IL)                                                 00002800
      RETURN                                                            00002900
      END                                                               00003000
      REAL*8 FUNCTION GAUNT(NN,QF)                                      00057000
      N=NN                                                              00057100
      X=QF/2.99793E14                                                   00057200
      IF(N.GT.10) GO TO 15                                              00057300
      GO TO (1,2,3,4,5,6,7,8,9,10),N                                    00057400
   15 GAUNT=1.0                                                         00057500
   16 RETURN                                                            00057600
    1 GAUNT=1.2302628+X*(-2.9094219E-3+X*(7.3993579E-6-                 00057700
     ,8.7356966E-9*X))+(12.803223/X-5.5759888)/X                        00057800
      GO TO 16                                                          00057900
    2 GAUNT=1.1595421+X*(-2.0735860E-3+2.7033384E-6*X)                  00058000
     ,+(-1.2709045+(-2.0244141/X+2.1325684)/X)/X                        00058100
      GO TO 16                                                          00058200
    3 GAUNT=1.1450949+X*(-1.9366592E-3+2.3572356E-6*X)+                 00058300
     ,(-0.55936432+(-0.23387146/X+0.52471924)/X)/X                      00058400
      GO TO 16                                                          00058500
    4 GAUNT=1.1306695+X*(-1.3482273E-3+X*(-4.6949424E-6+                00058600
     ,2.3548636E-8*X))+(-0.31190730+(0.19683564-                        00058700
     ,5.4418565E-2/X)/X)/X                                              00058800
      GO TO 16                                                          00058900
    5 GAUNT=1.1190904+X*(-1.0401085E-3+X*(-6.9943488E-6+                00059000
     ,2.8496742E-8*X))+(-0.16051018+(5.5545091E-2-                      00059100
     ,8.9182854E-3/X)/X)/X                                              00059200
      GO TO 16                                                          00059300
    6 GAUNT=1.1168376+X*(-8.9466573E-4+X*(-8.8393133E-6                 00059400
     ,+3.4696768E-8*X))+(-0.13075417+(4.1921183E-2-                     00059500
     ,5.5303574E-3/X)/X)/X                                              00059600
      GO TO 16                                                          00059700
    7 GAUNT=1.1128632+X*(-7.4833260E-4+X*(-1.0244504E                   00059800
     ,-5+3.8595771E-8*X))+(-9.5441161E-2+                               00059900
     ,(2.3350812E-2-2.2752881E-3/X)/X)/X                                00060000
      GO TO 16                                                          00060100
    8 GAUNT=1.1093137+X*(-6.2619148E-4+X*(-1.1342068E-5                 00060200
     ,+4.1477731E-8*X))+(-7.1010560E-2+(1.3298411E-2-                   00060300
     ,9.7200274E-4/X)/X)/X                                              00060400
      GO TO 16                                                          00060500
    9 GAUNT=1.1078717+X*(-5.4837392E-4+X*(-1.2157943E-5+                00060600
     ,4.3796716E-8*X))+(-5.6046560E-2+(8.5139736E-3-4.9576163E-4/X)/X)/X00060700
      GO TO 16                                                          00060800
   10 GAUNT=1.1052734+X*(-4.4341570E-4+X*(-1.3235905E                   00060900
     ,-5+4.7003140E-8*X))+(-4.7326370E-2+                               00061000
     ,(6.1516856E-3-2.9467046E-4/X)/X)/X                                00061100
      RETURN                                                            00061200
      END                                                               00061300
      REAL*8 FUNCTION GFREE(FRQ,T)                                      00061400
      THET=5.040E3/T                                                    00061500
      IF(THET.LT.4.0E-2) THET=4.0E-2                                    00061600
      X=FRQ/2.99793E14                                                  00061700
      IF(X.GT.1.0E0) GO TO 1                                            00061800
      IF(X.LT.0.2E0) X=0.20E0                                           00061900
      GFREE=(1.0823E0+2.98E-2/THET)+                                    00062000
     ,(6.7E-3+1.12E-2/THET)/X                                           00062100
      RETURN                                                            00062200
    1 C1=(3.9999187E-3-7.8622889E-5/THET)/THET+1.070192E0               00062300
      C2=(6.4628601E-2-6.1953813E-4/THET)/THET+2.6061249E-1             00062400
      C3=(1.3983474E-5/THET+3.7542343E-2)/THET+5.7917786E-1             00062500
      C4=3.4169006E-1+1.1852264E-2/THET                                 00062600
      GFREE=((C4/X-C3)/X+C2)/X+C1                                       00062700
      RETURN                                                            00062800
      END                                                               00062900
      REAL*8 FUNCTION H2PKUR(TEMP,FREQ)                                 
      REAL*8 A,B,ES,FR,AF,KT,EX,X,FMUT
      T=TEMP                                                            00065900
      FR=FREQ                                                           00066000
      IF(FR.LE.3.28805D15) GO TO 1                                      00066100
      H2PKUR=0.0                                                        00066200
      RETURN                                                            00066300
    1 AF=DLOG(FR)                                                       00066400
      A=(-4.230D-46+(1.224D-61-1.351D-77*FR)*FR)*FR                     00066500
      ES=-7.342D-3+(-2.409D-15+(1.028D-30+A)*FR)*FR                     00066600
      B=(-1.82496D1+(3.9207D-1-3.1672D-3*AF)*AF)*AF                     00066700
      KT=1.38062D-16*T/1.6022D-12                                       00066800
                X=((-ES/KT)-3.0233D+3+(3.7797D2+B)*AF)
      FMUT=DEXP(X)
C      WRITE(6,12345) FMUT
12345 FORMAT(1X,'DEXP(X)=',D15.7)
C      FMUT=DEXP((-ES/KT)-3.0233D+3+(3.7797D2+B)*AF)                    00066900
       X=(6.624D-27*FR/1.38062D-16/T)
      EX=1.0/DEXP(X)
C      EX=1.0/DEXP(6.624D-27*FR/1.38062D-16/T)                          00067000
       FMUT=FMUT*(1.0-EX)
C      WRITE(6,12346) FMUT
12346 FORMAT(1X,'FMUT=',D15.7)
      H2PKUR=FMUT                                                       00067100
      RETURN                                                            00067200
      END                                                               00067300
      SUBROUTINE LININT(X,Y,N,NR)                                       00000100
      DIMENSION X(NR),Y(NR)                                             00000200
      COMMON A(250),B(250),XX(250),YY(250),NN,DUMMY(9299)               00000300
      NM1=N-1                                                           00000400
      DO 1 I=1,NM1                                                      00000500
      A(I)=(Y(I+1)-Y(I))/(X(I+1)-X(I))                                  00000600
      B(I)=Y(I)-A(I)*X(I)                                               00000700
    1 CONTINUE                                                          00000800
      DO 2 I=1,N                                                        00000900
      XX(I)=X(I)                                                        00001000
      YY(I)=Y(I)                                                        00001100
    2 CONTINUE                                                          00001200
      NN=N                                                              00001300
      RETURN                                                            00001400
      END                                                               00001500


      REAL*8 FUNCTION OPMET(IDEP,FREQ,EMIS) 
C
C          INCLUDE 'PARAMAX'
      PARAMETER (MDEP=1,MK=1,MFT=1)        
C                            
      REAL*8 KOEF,SUM,D,DB                                              
      REAL*8 SIGMA
      REAL*8 TERM                                                       
      REAL*8 NLEVEL                                                     
      LOGICAL EMIS                                                      
      DIMENSION NELEM(1),KU(1),KEL(1)                                   
      DIMENSION BN(10),NOP(5),ELOPAC(5),TERM(34)                        
      DIMENSION ELMENT(25),ALFA(25),AS(25),CHIO(25)                     
      DIMENSION NBELO1(50),NTO1(50),TO1(248),UO1(248)                   
      DIMENSION NLEVEL(30),EXO1(30),GO1(30)                
                                                      
      REAL NE,NATOM,ELOPAC
C                                              
      COMMON V(10300)                                                   
C
      COMMON/BION/ BM(MDEP,30)
C 
      COMMON/MODEL/ NE(MDEP),TEMP(MDEP),PE(MDEP),NATOM(MDEP)
C                    
      COMMON/LTECAL/ HK,FION(MK),G(MK)
                                  
      EQUIVALENCE (V(2000),NELEM(1)),(V(2001),ELMENT(1)),               
     ,(V(2026),ALFA(1)),(V(2051),AS(1)),(V(2076),CHIO(1))               
      EQUIVALENCE (V(2101),NBELO1(1)),(V(2151),NTO1(1))                 
      EQUIVALENCE (V(2201),KU(1)),(V(2202),TO1(1)),(V(2450),UO1(1))     
      EQUIVALENCE (V(2698),KEL(1)),(V(2699),NLEVEL(1)),                 
     ,(V(2759),EXO1(1)),(V(2789),GO1(1))           
                                           
      DATA NOP/4*8,2/                                                   
      DATA ELOPAC(1),ELOPAC(2),ELOPAC(3),ELOPAC(4),ELOPAC(5)/'SI  ',    
     ,'C   ','MG  ','AL  ','FE  '/                                      
      DATA TERM/'3P2 3P  ','3P2 1D  ','3P2 1S  ',                       
     ,'3P3 5S  ','4S  3P0 ','4S1 P0  ','3D  3D0 ',                      
     ,'4P  3SPD','2P2 3P  ','2P2 1D  ','2P2 1S  ',                      
     ,'2P3 5S0 ','3S  3P0 ','3S  1P0 ','2P3 3D  ',                      
     ,'3P  3SPD','3S2 1S  ','3P3 P0  ','3P  1P0 ',                      
     ,'4S  3S  ','4S  1D  ','3D  1D  ','3D  3D  ',                      
     ,'4P  1P0 ','3P2 P0  ','4S  2S  ','3P  4P  ',                     
     ,'3D  2D  ','4P  2P0 ','5S  2S  ','4D  2D  ',                      
     ,'5P  2P0 ','A5  D   ','A5  F   '/                                 
      HK=157896.D0/3.29D15                                              
      ID=IDEP                                                           
      ELN=NE(ID)                                                        
      T=TEMP(ID)                                                        
      NO=0                                                             
      KOEF=0.0D0                                                       
      KL=KEL(1)                                                         
      DO 4 NEL=1,KL                                                     
      KBO=0 
                                                            
C      NLM=NELEM(1)                                                     
C      DO 1 K=1,NLM 
      DO 1 K=1,NELEM(1)  
                                                     
      IF(ELOPAC(NEL).EQ.ELMENT(K)) GO TO 14                             
   40 KBO=KBO+NBELO1(2*K-1)+NBELO1(2*K)                                 
    1 CONTINUE                                                          
      WRITE(6,24) ELOPAC(NEL)                                           
   24 FORMAT('0  ERROR IN OPMET: THERE IS NOT ',                        
     ,A4,' IN INPUT DATA')                                              
      STOP                                                              
   14 N1=NOP(NEL)+NO                                                    
      NO=NO+1                                                           
      NBO=KBO+NBELO1(2*K-1)                                             
      KBO=KBO+1                                                         
      SUM=0.0D0                                                         
      DB=0.0D0                                                          
      L=0                                                               
      DO 3 NO1=NO,N1                                                    
      L=L+1                                                             
      IF(NBELO1(2*K-1).EQ.0) GO TO 13                                   
   43 DO 2 I=KBO,NBO                                                    
      IF(TERM(NO1).NE.NLEVEL(I)) GO TO 2                                
   52 DB=(BM(ID,I)-1.0)*GO1(I)*EXP(-1.0*EXO1(I)/0.8616D-4/T)+DB         
      BN(L)=BM(ID,I)                                                    
      GO TO 33                                                          
    2 CONTINUE                                                          
   13 BN(L)=1.0E0                                                       
   33 E=ELMENT(K)                                                       
      IF(EMIS) GO TO 5                                                  
   65 SUM=SUM+BN(L)*(1.0-EXP(-1.*HK*FREQ/T)/BN(L))*SIGMA(E,L,FREQ,T)    
      GO TO 3                                                           
    5 SUM=SUM+SIGMA(E,L,FREQ,T)                                        
    3 CONTINUE                                                          
      D=2.0*PU(T,2,K)*EXP(-1.0*CHIO(K)/0.8616D-4/T)*T*SQRT(T)*          
     ,2.414556D15/ELN+PU(T,1,K)+DB                                     
      KOEF=KOEF+ALFA(K)*SUM/D                                           
      NO=N1                                                             
    4 CONTINUE                                                          
      OPMET=KOEF                                                        
      RETURN                                                            
      END                                                               
      SUBROUTINE PARA5(XO,YO)                                           00021400
      COMMON/PARABC/ A(10000),B(10000),C(10000),X(10000),Y(10000),N
      IL=1                                                              00021600
      IF(XO.LT.X(IL)) IL=1                                              00021700
      IF(XO.LT.X(1)) GO TO 4                                            00021800
      IF(XO.LT.X(IL+1)) GO TO 4                                         00021900
    5 IL=IL+1                                                           00022000
      DO 2 I=IL,N                                                       00022100
      IF(X(I).GE.XO) GO TO 3                                            00022200
    2 CONTINUE                                                          00022300
      I=N                                                               00022400
    3 IL=I-1                                                            00022500
    4 YO=A(IL)+B(IL)*XO+C(IL)*XO*XO                                     00022600
      RETURN                                                            00022700
      END                                                               00022800
      SUBROUTINE PARAB(XO,YO)                                           00021400
      COMMON A(100),B(100),C(100),X(100),Y(100),N,DUMMY(9799)           00021500
      IL=1                                                              00021600
      IF(XO.LT.X(IL)) IL=1                                              00021700
      IF(XO.LT.X(1)) GO TO 4                                            00021800
      IF(XO.LT.X(IL+1)) GO TO 4                                         00021900
    5 IL=IL+1                                                           00022000
      DO 2 I=IL,N                                                       00022100
      IF(X(I).GE.XO) GO TO 3                                            00022200
    2 CONTINUE                                                          00022300
      I=N                                                               00022400
    3 IL=I-1                                                            00022500
    4 YO=A(IL)+B(IL)*XO+C(IL)*XO*XO                                     00022600
      RETURN                                                            00022700
      END                                                               00022800
C  Natasha!  -----------------------------------------18.01.96

C   Here I send you the improved formal solver. Try to understand it
C  and ask me any questions about.

C   Javier

C  P.S. I send also a Voigt routine just in case you need it.
C
C++++++++++++++++++++++++++++++++++++++++++++++++++++08.03.96 IAC
C                           PARABO in is used SCRT1D    
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++Natasha

	FUNCTION PARABO(TRICK,k,DTM,DTP,S0,SM,SP)
C  Parabolic aproximation of S....analytical integration
C
	IMPLICIT REAL*8 (A-H,O-Z)
C
        IF(DTM.GE.TRICK) THEN

C Natasha:
C           If DTM is too large (near low boundary)
C If we want to avoid underflow in DEXP
C
                    IF(DTM.GE.80.0) THEN
                    EXU=DEXP(-80.0D0)
                    ELSE              
                  EXU=DEXP(-DTM)
                    ENDIF

	U0=1.-EXU
	U1=DTM-1.+EXU
	U2=DTM*DTM-2.*DTM+2.-2.*EXU
C
        ELSE
C
        D2=DTM*DTM
        D3=DTM*D2
        D4=DTM*D3
        U0=DTM-(D2/2.D0)
        U1=(D2/2.D0)-(D3/6.D0)
        U2=(D3/3.D0)-(D4/12.D0)
C
        END IF        
C
	CM=(U2-U1*(DTP+2.*DTM))/(DTM*(DTM+DTP))+U0
	C0=(U1*(DTM+DTP)-U2)/(DTM*DTP)
	CP=(U2-DTM*U1)/(DTP*(DTM+DTP))
C
	PARABO=CM*SM+C0*S0+CP*SP
C
C        if(k.eq.5) then
C        print *,'s0 sm sp'
C        print *,s0
C        print *,sm
C        print *,sp
C        print *,'co cm cp'
C        print *,c0
C        print *,cm
C        print *,cp
C        print *,'parabo=',parabo
C        end if
C
	RETURN
	END
      SUBROUTINE PARCO5(X,Y,N,NR)                                       00017700
      DIMENSION X(NR),Y(NR)                                             00017800
      COMMON/PARABC/ A(10000),B(10000),C(10000),XX(10000),YY(10000),NN  00017900
      C(1)=0.                                                           00018000
      B(1)=(Y(2)-Y(1))/(X(2)-X(1))                                      00018100
      A(1)=Y(1)-X(1)*B(1)                                               00018200
      IF(N.EQ.2) RETURN                                                 00018300
      N1=N-1                                                            00018400
      C(N)=0.0                                                          00018500
      B(N)=(Y(N)-Y(N1))/(X(N)-X(N1))                                    00018600
      A(N)=Y(N)-X(N)*B(N)                                               00018700
      DO 1 J=2,N1                                                       00018800
      J1=J-1                                                            00018900
      D=(Y(J)-Y(J1))/(X(J)-X(J1))                                       00019000
      C(J)=Y(J+1)/((X(J+1)-X(J))*(X(J+1)-X(J1)))-Y(J)/((X(J)-X(J1))*    00019100
     ,(X(J+1)-X(J)))+Y(J1)/((X(J)-X(J1))*(X(J+1)-X(J1)))                00019200
      B(J)=D-(X(J)+X(J1))*C(J)                                          00019300
      A(J)=Y(J1)-X(J1)*(B(J)+C(J)*X(J1))                                00019400
    1 CONTINUE                                                          00019500
      IF(N1.EQ.2) GO TO 4                                               00019600
      N1=N-2                                                            00019700
      DO 2 J=2,N1                                                       00019800
      IF(C(J).EQ.0) GO TO 2                                             00019900
      J1=J+1                                                            00020000
      WT=ABS(C(J1))/(ABS(C(J1))+ABS(C(J)))                              00020100
      A(J)=A(J1)+WT*(A(J)-A(J1))                                        00020200
      B(J)=B(J1)+WT*(B(J)-B(J1))                                        00020300
      C(J)=C(J1)+WT*(C(J)-C(J1))                                        00020400
    2 CONTINUE                                                          00020500
    4 CONTINUE                                                          00020600
      DO 3 I=1,N                                                        00020700
      XX(I)=X(I)                                                        00020800
      YY(I)=Y(I)                                                        00020900
    3 CONTINUE                                                          00021000
      NN=N                                                              00021100
      RETURN                                                            00021200
      END                                                               00021300
      SUBROUTINE PARCOF(X,Y,N,NR)                                       00017700
      DIMENSION X(NR),Y(NR)                                             00017800
      COMMON A(100),B(100),C(100),XX(100),YY(100),NN,DUMMY(9799)        00017900
      C(1)=0.                                                           00018000
      B(1)=(Y(2)-Y(1))/(X(2)-X(1))                                      00018100
      A(1)=Y(1)-X(1)*B(1)                                               00018200
      IF(N.EQ.2) RETURN                                                 00018300
      N1=N-1                                                            00018400
      C(N)=0.0                                                          00018500
      B(N)=(Y(N)-Y(N1))/(X(N)-X(N1))                                    00018600
      A(N)=Y(N)-X(N)*B(N)                                               00018700
      DO 1 J=2,N1                                                       00018800
      J1=J-1                                                            00018900
      D=(Y(J)-Y(J1))/(X(J)-X(J1))                                       00019000
      C(J)=Y(J+1)/((X(J+1)-X(J))*(X(J+1)-X(J1)))-Y(J)/((X(J)-X(J1))*    00019100
     ,(X(J+1)-X(J)))+Y(J1)/((X(J)-X(J1))*(X(J+1)-X(J1)))                00019200
      B(J)=D-(X(J)+X(J1))*C(J)                                          00019300
      A(J)=Y(J1)-X(J1)*(B(J)+C(J)*X(J1))                                00019400
    1 CONTINUE                                                          00019500
      IF(N1.EQ.2) GO TO 4                                               00019600
      N1=N-2                                                            00019700
      DO 2 J=2,N1                                                       00019800
      IF(C(J).EQ.0) GO TO 2                                             00019900
      J1=J+1                                                            00020000
      WT=ABS(C(J1))/(ABS(C(J1))+ABS(C(J)))                              00020100
      A(J)=A(J1)+WT*(A(J)-A(J1))                                        00020200
      B(J)=B(J1)+WT*(B(J)-B(J1))                                        00020300
      C(J)=C(J1)+WT*(C(J)-C(J1))                                        00020400
    2 CONTINUE                                                          00020500
    4 CONTINUE                                                          00020600
      DO 3 I=1,N                                                        00020700
      XX(I)=X(I)                                                        00020800
      YY(I)=Y(I)                                                        00020900
    3 CONTINUE                                                          00021000
      NN=N                                                              00021100
      RETURN                                                            00021200
      END                                                               00021300
C****************************************************multi: mul20_sub.f
C
      FUNCTION PLANCK(U,T)
C
C  CALCULATES PLANCK FUNCTION BNY AT FREQUENCY U, TEMP T
C
C
      COMMON/CCONST/ EE,HH,CC,BK,EM,UU,HCE,HC2,HCK,EK,PI
C
      X=HH*U/BK/T
C      PRINT *,'BK=',BK
      
C      PRINT *,'T=',T
C      PRINT *,'U=',U
C      PRINT *,'X=',X
      
      IF(X.LT.80.) THEN
        PLANCK=2.0*HH*U/CC*U/CC*U/(EXP(X)-1.0)
      ELSE
        PLANCK=2.0*HH*U/CC*U/CC*U*EXP(-X)
      ENDIF
C
      RETURN
      END
C
C**********************************************************************
      FUNCTION PU(TT,ION,IEL)                                           
      DIMENSION TO(25),UO(25)                                           
      DIMENSION NBELO1(2,25),NTO1(2,25)                                 
      DIMENSION TO1(248),UO1(248)                                       
      COMMON V(10300)                                                   
      EQUIVALENCE (V(2101),NBELO1(1)),(V(2151),NTO1(1))                 
      EQUIVALENCE (V(2202),TO1(1))                                      
      EQUIVALENCE (V(2450),UO1(1))                                      
      T=TT                                                              
      K=2                                                               
      NLM=IEL                                                           
      NTO=0                                                             
      DO 16 IE =1,NLM                                                   
      IF(IE.EQ.IEL) K=ION                                               
      DO 2 IO=1,K                                                       
      NTE=NTO1(IO,IE)                                                   
      NTO=NTO+NTE                                                       
    2 CONTINUE                                                          
   16 CONTINUE                                                          
      IF(NTE.EQ.1) GO TO 1                                             
      NTO=NTO-NTE                                                       
      DO 4 IT=1,NTE                                                     
      NTO=NTO+1                                                         
      TO(IT)=TO1(NTO)                                                  
      UO(IT)=UO1(NTO)                                                   
    4 CONTINUE                                                          
      CALL LININT(TO,UO,NTE,25)                                         
      U=0.0                                                             
      CALL EVAL(T,U)                                                   
      PU=U                                                             
      RETURN                                                           
    1 PU=UO1(NTO)                                                       
      RETURN                                                            
      END                                                               
      SUBROUTINE READION(N_elements, Atom_char, At_abund, ifile)
C
C***********************************************************IAC, 08.06.97
C                                                   Nataliya G. Shchukina                                                     
C
C   Read atomic data from file ION.DAT  
C   
C   Data are needed for solution of ionization equilibrium
C
C**********************************************************************
C
C  There are TWO choices for 
C  solution of ionization equilibrium equations:
C----------
C Choice 1:
C----------
C
C  IHTOT > 0 - density RHO and total number of hydrogen atoms HTOT
C              are known
C              from gas pressure PG and electron pressure PE 
C
C              subroutine STATP is called.
C
C  IHTOT = 1   without molecules 
C          2   with    molecules H2+ and H2.
C
C----------
C Choice 2:
C----------
C
C   IHTOT < 0 - density RHO and total number of hydrogen atoms HTOT 
C               are determined with new
C               chemical composition.
C
C              subroutine STATM is called.
C
C  IHTOT =-1   without molecules
C  IHTOT =-2   with    molecules H2+ and H2.
C
C

C   Contributitors in in the electron density NE: 
C   H, Si, C, Mg, Al, Fe, He, N, O, Ne, Na, P, S, Ar, Ca, Cr, Mn.
C

C********************************************************************
C
C  PARAMAX contains dimensions of arrays 
C
C MODIFIED BY HECTOR (DEC 99) TO TAKE EXTERNAL ABUNDANCES. THESE ARE
C NO LONGER IN THE FILE ion.dat. OTHER PARAMETERS, HOWEVER
C (PARTITION FUNCTIONS, ATOMIC WEIGHT, ETC), ARE STILL TAKEN FROM THE
C FILE, BUT THESE ARE NORMALLY VALUES THAT CAN BE HARDWIRED WITHOUT 
C MUCH TROUBLE.
      
C                INCLUDE 'PARAMAX'
      PARAMETER (MDEP=1,MK=1,MFT=1)  
C
      COMMON/CCONST/ EE,HH,CC,BK,EM,UU,HCE,HC2,HCK,EK,PI
C
                                                          
      DIMENSION NELEM(1),KU(1),KEL(1)                                  
      DIMENSION ELMENT(25),ALFA(25),AS(25),CHIO(25)                     
      DIMENSION NBELO1(2,25),NTO1(2,25)                
      REAL*8 NLEVEL   
      DIMENSION TO1(248),UO1(248),NLEVEL(30),EXO1(30),                  
     ,     GO1(30),BELEM(MDEP,30)             
      Character*2 Atom_char(N_elements), tmpchar
      Real At_abund(N_elements), tmpreal
      Logical found
      Integer ifile
      
      COMMON V(10300)
C
      COMMON/BION/ BM(MDEP,30)
C 
      COMMON/ATWT/ ATW,SUM
C                                 
      Equivalence (tmpchar, tmpreal)
      EQUIVALENCE(V(2000),NELEM(1)),(V(2001),ELMENT(1))                 
      EQUIVALENCE(V(2026),ALFA(1)),(V(2051),AS(1)),(V(2076),CHIO(1))    
      EQUIVALENCE(V(2101),NBELO1(1)),(V(2151),NTO1(1))                  
      EQUIVALENCE(V(2201),KU(1)),(V(2202),TO1(1)),(V(2450),UO1(1))      
      EQUIVALENCE(V(2698),KEL(1)),(V(2699),
     ,NLEVEL(1)),(V(2759),EXO1(1)),
     ,(V(2789),GO1(1))
C 
c         PRINT *,' READION read atomic data from file ION.DAT' 
      
                                                          
         DO I=1,30                                                    
           DO J=1,MDEP              
             BM(J,I)=1.0
           End do
         End do
         DO I=1,30
           DO J=1,MDEP
             BELEM(J,I)=1.
           End do
         End do
              
      READ (ifile,71) NELEM(1),KEL(1),KU(1)
C      PRINT *,NELEM(1),KEL(1),KU(1)

   71 FORMAT(3I5)
                                          
      IF(NELEM(1).LE.25) GO TO 70                                       
      PRINT *,'INPUT ERROR IN ATMOS: NELEM HAS TO BE < OR = 25'        
      STOP                                                              
   70 CONTINUE                                                          
      IF(KEL(1).LE.6) GO TO 74                                          
      PRINT *,'INPUT ERROR IN ATMOS: KEL HAS TO BE < OR = 6'          
      STOP                                                   
   74 CONTINUE                                                          
      IF(KU(1).LE.6) GO TO 170                                          
      PRINT *,'INPUT ERROR IN ATMOS: KU HAS TO BE < OR = 6'           
      STOP                                                             
  170 CONTINUE
                                                            
      KBO=0                                                            
      NTO=0                                                            
      NLMM=NELEM(1)                                                      
      XMUM=0.
      SUM=0.
      DO IE=1,NLMM 
C----------------------------------------------------------------
C ELMENT is the name of chemical element in the Mendeleev's table
C ALFA   is an abundance  relatively hydrogen 
C AS     is an atomic weight
C CHIO   is ionization potential
C
C TO1 and UO1 are the temperature and partition function for neutral atom
C NTO1 is tne number of the temperature points
C
C TO2, UO2, NTO2 are the same for ion
C 
C NBELO1 = 0 for LTE case
C
C if NBELO1 NE 0 you have to read:
C
C NLEVEL - name of the level;
C EXO1   - excitation potential of the level;
C GO1    - statistical weight;
C BELEM  - departure coefficients for the grid of depth points
C
C NB!!!
C Natasha comments the NLTE case
C----------------------------------------------------------------                                                      
      READ (ifile,75) ELMENT(IE),ALFA(IE),AS(IE),CHIO(IE)
C      PRINT *,ELMENT(IE),ALFA(IE),AS(IE),CHIO(IE)
      Found=.FALSE.
      Do ind=1, N_elements
        tmpreal=ELMENT(IE)
        If (Atom_char(ind) .eq. tmpchar) then
          Found=.TRUE.
          ALFA(IE)=10.**(At_abund(ind)-12.)
        End if
      End do
      If (.not.Found) then
        Print *,'Element ',ELMENT(IE),' in ion.dat not found in the'
        Print *,'atomic data table!! Aborting ...'
        Stop
      End if
                      
   75 FORMAT(A4,3E10.3)                                                 
       XMUM=XMUM+ALFA(IE)*AS(IE)
       SUM=SUM+ALFA(IE)
      DO IO=1,2                                                     
      READ (ifile,77) NBELO1(IO,IE),NTO1(IO,IE) 
C      PRINT *,NBELO1(IO,IE),NTO1(IO,IE) 
                              
   77 FORMAT(2I5)                                                       
      NB=NBELO1(IO,IE)+KBO                                              
      NTE=NTO1(IO,IE)+NTO                                               
      NTO=NTO+1                                                       
      DO IU=NTO,NTE                                                
      READ (ifile,79) TO1(IU),UO1(IU)
C      PRINT *,TO1(IU),UO1(IU)
                                     
   79 FORMAT(E6.0,E10.3)                                               
      End do
      NTO=NTE                                                          
       IF(NBELO1(IO,IE).EQ.0) GO TO 104                                 
       KBO=KBO+1                                                       
       DO IB=KBO,NB                                                
       READ (ifile,81) NLEVEL(IB),EXO1(IB),GO1(IB)                             
   81  FORMAT(A8,E10.3,F5.0)                                            
       DO ID=1,ND,5                                                 
       READ (ifile,83) BELEM(ID,IB)
C       ,                                           
C      ,BELEM(ID+1,IB),BELEM(ID+2,IB),BELEM(ID+3,IB),BELEM(ID+4,IB)      
C
   83  FORMAT(5E15.7)                                                   
       End do
       End do
       KBO=NB                                                            
 104   CONTINUE                                                        
       End do
       End do

C  ATW - mean atomic weight MU

         ATW=XMUM/SUM
C         PRINT *,ATW,SUM
        RETURN
        END        
      REAL*8 FUNCTION SCATL(FREQ)                                       00067400
      REAL*8 LAMBDA                                                     00067500
      REAL*8 L                                                          00067600
      FR=AMIN1(FREQ,2.922E15)                                           00067700
      LAMBDA=2.997925D18/FR                                             00067800
      L=1.0/LAMBDA**2                                                   00067900
      SCATL=L*L*(5.799D-13+1.422D-6*L+2.784D0*L*L)                      00068000
      RETURN                                                            00068100
      END                                                               00068200
      REAL*8 FUNCTION SIGAL(IL,LL,T)                                    00053900
      REAL*8 HKC
      REAL LL                                                           00054000
      DIMENSION GAL(8),ALL(8),AAL(8),SAL(8)                             00054100
      DATA GAL/6.,2.,6.,10.,6.,2.,10.,6./                               00054200
      DATA ALL/0.2076,0.4360,0.5205,0.6311,0.6525,                      00054300
     ,0.9442,1.0698,1.2495/                                             00054400
      DATA AAL/65.,10.,10.,47.,14.5,56.7,50.,50./                       00054500
      DATA SAL/4.4,2.,2.,1.83,1.,1.9,3.,3./                             00054600
      HKC=157896.D0*2.9979D14/3.2901D15                                 00054700
      IF(LL.LE.ALL(IL)) GO TO 1                                         00054800
   11 SIGAL=0.0D0                                                       00054900
      RETURN                                                            00055000
    1 SIGAL=AAL(IL)*((LL/ALL(IL))**SAL(IL))                             00055100
      SIGAL=SIGAL*GAL(IL)*EXP(HKC/ALL(IL)/T)                            00055200
      RETURN                                                            00055300
      END                                                               00055400
      REAL* 8 FUNCTION SIGCAR(IL,LL,T)                                  00049800
      REAL* 8 HKC
      REAL LL                                                           00049900
      DIMENSION GC(8),CL(8),AC(8),SC(8),BC(3),S1C(3)                    00050000
      DATA GC/9.,5.,1.,5.,9.,3.,15.,27./                                00050100
      DATA CL/0.1100,0.1239,0.1444,0.1745,0.3257,0.3437,0.3705,         00050200
     ,0.6316/                                                           00050300
      DATA AC/38.6,28.7,33.6,1.,0.2,1.54,16.,2.1/                       00050400
      DATA SC/2.,1.5,1.5,3.,1.2,1.2,3.,1.5/                             00050500
      DATA BC/28.2,18.4,24.0/                                           00050600
      DATA S1C/3.,2.5,2.5/                                              00050700
      HKC=157896.D0*2.9979D14/3.2901D15                                 00050800
      IF(LL.LE.CL(IL)) GO TO 1                                          00050900
   11 SIGCAR=0.0D0                                                      00051000
      RETURN                                                            00051100
    1 IF(IL.GT.3) GO TO 2                                               00051200
   22 SIGCAR=AC(IL)*((LL/CL(IL))**SC(IL))-BC(IL)*                       00051300
     ,((LL/CL(IL))**S1C(IL))                                            00051400
      GO TO 3                                                           00051500
    2 SIGCAR=AC(IL)*((LL/CL(IL))**SC(IL))                               00051600
    3 SIGCAR=SIGCAR*GC(IL)*EXP(HKC/CL(IL)/T)                            00051700
      RETURN                                                            00051800
      END                                                               00051900
      REAL* 8 FUNCTION SIGFE(IL,LL,T)                                   00055500
      REAL* 8 HKC
      REAL LL                                                           00055600
      DIMENSION GFE(2),FEL(2),AFE(2),SFE(2)                             00055700
      DATA GFE/9.,11./                                                  00055800
      DATA FEL/0.1570,0.1761/                                           00055900
      DATA AFE/6.3,5.04/                                                00056000
      DATA SFE/3.,3./                                                   00056100
      HKC=157896.D0*2.9979D14/3.2901D15                                 00056200
      IF(LL.LE.FEL(IL)) GO TO 1                                         00056300
   11 SIGFE=0.0E0                                                       00056400
      RETURN                                                            00056500
    1 SIGFE=AFE(IL)*((LL/FEL(IL))**SFE(IL))                             00056600
      SIGFE=SIGFE*GFE(IL)*EXP(HKC/FEL(IL)/T)                            00056700
      RETURN                                                            00056800
      END                                                               00056900
      REAL*8 FUNCTION SIGMA(IE,IL,FR,TT)                                00041500
      REAL*8 SIGSI,SIGCAR,SIGMG,SIGAL,SIGFE
      REAL*8 TTT
      REAL LAMBDA                                                       00041600
      REAL IE                                                           00041700
      DIMENSION ENAME(5)                                                00041800
      DATA ENAME(1),ENAME(2),ENAME(3),ENAME(4),ENAME(5)/'SI  ',         00041900
     ,'C   ','MG  ','AL  ','FE  '/                                      00042000
      TTT=TT
      LAMBDA=2.99791E14/FR                                              00042100
      DO 11 NN=1,5                                                      00042200
      IF (IE.EQ.ENAME(NN)) GO TO 100                                    00042300
   11 CONTINUE                                                          00042400
      PRINT 200,IE                                                      00042500
  200 FORMAT('0  ERROR IN SIGMA: THERE IS NOT ',                        00042600
     ,A4,' IN INPUT DATA')                                              00042700
      STOP                                                              00042800
  100 GO TO (1,2,3,4,5),NN                                              00042900
    1 SIGMA=SIGSI(IL,LAMBDA,TT)*DEXP(-8.149D0/0.8616D-4/TTT)            00043000
      RETURN                                                            00043100
    2 SIGMA=SIGCAR(IL,LAMBDA,TT)*DEXP(-11.256D0/0.8616D-4/TTT)          00043200
      RETURN                                                            00043300
    3 SIGMA=SIGMG(IL,LAMBDA,TT)*DEXP(-7.644D0/0.8616D-4/TTT)            00043400
      RETURN                                                            00043500
    4 SIGMA=SIGAL(IL,LAMBDA,TT)*DEXP(-5.984D0/0.8616D-4/TTT)            00043600
      RETURN                                                            00043700
    5 SIGMA=SIGFE(IL,LAMBDA,TT)*DEXP(-7.900D0/0.8616D-4/TTT)            00043800
  300 RETURN                                                            00043900
      END                                                               00044000
      REAL* 8 FUNCTION SIGMG(IL,LL,T)                                   00052000
      REAL* 8 HKC
      REAL MGL,LL                                                       00052100
      DIMENSION GMG(8),MGL(8),AMG(8),SMG(8)                             00052200
      DATA GMG/1.,9.,3.,3.,1.,5.,9.,15./                                00052300
      DATA MGL/0.1621,0.2513,0.3756,0.4884,0.5504,0.6549,               00052400
     ,0.7236,0.7292/                                                    00052500
      DATA AMG/1.1,20.,16.,2.1,0.43,45.,25.,33.8/                       00052600
      DATA SMG/10.,2.7,2.1,2.6,2.6,2.7,2.7,2.8/                         00052700
      HKC=157896.D0*2.9979D14/3.2901D15                                 00052800
      IF(LL.LE.MGL(IL)) GO TO 1                                         00052900
      SIGMG=0.0D0                                                       00053000
      RETURN                                                            00053100
    1 IF (IL.NE.3) GO TO 2                                              00053200
   12 SIGMG=AMG(3)*((LL/MGL(3))**2.1)-7.8*((LL/MGL(3))**9.5)            00053300
      GO TO 3                                                           00053400
    2 SIGMG=AMG(IL)*((LL/MGL(IL))**SMG(IL))                             00053500
    3 SIGMG=SIGMG*GMG(IL)*EXP(HKC/MGL(IL)/T)                            00053600
      RETURN                                                            00053700
      END                                                               00053800
      REAL* 8 FUNCTION SIGSI(IL,LL,T)                                   00047500
      REAL* 8 HKC
      DIMENSION GSI(8),SIL(8),ASI(8),SSI(8)                             00047600
      REAL LL                                                           00047700
      DATA GSI/9.,5.,1.,5.,9.,3.,15.,27./                               00047800
      DATA SIL/0.1525,0.1682,0.1986,0.3085,0.3864,0.4040,0.4892,        00047900
     ,0.5840/                                                           00048000
      DATA ASI/37.,35.,46.,15.,1.25,4.09,18.,14.1/                      00048100
      DATA SSI/5.,3.,0.5,3.,2.,2.,3.,3./                                00048200
      HKC=157896.E0*2.9979E14/3.2901E15                                 00048300
      IF(IL.EQ.1) GO TO 1                                               00048400
   11 IF(LL.LE.SIL(IL)) GO TO 2                                         00048500
    4 SIGSI=0.0D0                                                       00048600
      RETURN                                                            00048700
    1 IF(LL.LT.0.135E0) GO TO 3                                         00048800
   33 IF(LL.GT.SIL(1)) GO TO 4                                          00048900
   44 SIGSI=ASI(1)                                                      00049000
      GO TO 5                                                           00049100
    3 SIGSI=ASI(1)*((LL/0.135E0)**SSI(1))                               00049200
      GO TO 5                                                           00049300
    2 SIGSI=ASI(IL)*((LL/SIL(IL))**SSI(IL))                             00049400
    5 SIGSI=SIGSI*GSI(IL)*EXP(HKC/SIL(IL)/T)                            00049500
      RETURN                                                            00049600
      END                                                               00049700

      SUBROUTINE SOPAS(ID,IHTOT,FREQ,PEL,TEL,PG,CHIO,CHIE,ETA)
C
C********************************************************IAC 08.06.97
C
C This routine gives possibility to use the OPACITY package of
C         Nataliya G. Shchukina 
C e-mail:
C         shchukin@mao.kiev.ua (Kiev Ukraine)
C         
C         natasha@ll.iac.es
C
C****************************************************************                                                     
C INPUT:
C-------
C        ID     is the depth point number 
C
C !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C   Pen^a, please use    ID=1 !!!
C                     IHTOT=2 !!!
C !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C
C       IHTOT   is the parameter used for the choice 
C                  of the type of the ionization equilibrium solution
C                
C        FREQ   is a  frequency in [second-1]
C         PEL   is an electron pressure
C         TEL   is an electron emperature
C          PG   is a  gas pressure
C
c      There is a parameter called IFUDGE passed to chigm in a common, 
c      in the form
c               COMMON/FUDGE/IFUDGE      
c      IFUDGE=1 -> Consider fudge opacities
c      IFUDGE=0 -> Do not consider fudge opacities
c
c      Hector: I have hardwired this value to 1 in  chigm.f
C NB !!!  
C           You need real value PG only if IHTOT > 0
C                                       if IHTOT < 0 you can put PG=0. 
C
C OUTPUT: background opacity
C--------
C       CHIO   is   the continuum absorption coefficient due to
C
C                 - hydrogen negative H- (BF+FF);
C                 - hydrogen neutral  H  (BF+FF);
C                 - molecule H2+
C
C                 - metals (BF):
C                   SI - BF from first 8 levels,
C                   C  -               8 levels,
C                   MG -               8 levels,
C                   AL -               8 levels,
C                   Fe                 2 levels.
C   
C       CHIE   is the scattering coefficient for free electrons and 
C                                                neutral hydrogen
C
C         ETA  is  the continuum emission coefficient
C NB!
C         ETA    does NOT contain scattering part 
C
C C!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C
C                          WARNING!
C
C  CHIG gives absorb. & emis. divided by density RHO!
C             If Z - scale   in [cm],
C                populations in [cm-3]
C                            then
C  CHIO, CHIE, ETA has to be in [cm-1]
C
C**********************************************************************
C
C  There are TWO choices for 
C  solution of ionization equilibrium equations:
C----------
C Choice 1:
C----------
C
C  IHTOT > 0 - density RHO and total number of hydrogen atoms HTOT
C              are known
C              from gas pressure PG and electron pressure PEL 
C             
C
C              subroutine STATP is called.
C
C  IHTOT = 1   the solution without molecules 
C          2                with    molecules H2+ and H2.
C
C----------
C Choice 2:
C----------
C
C   IHTOT < 0 - density RHO and total number of hydrogen atoms HTOT 
C               are determined with new
C               chemical composition.
C
C              subroutine STATM is called.
C
C  IHTOT =-1   the solution without molecules
C  IHTOT =-2                with    molecules H2+ and H2.
C
C

C   Contributitors in in the electron density NE: 
C   H, Si, C, Mg, Al, Fe, He, N, O, Ne, Na, P, S, Ar, Ca, Cr, Mn.
C

C********************************************************************
C
C  PARAMAX contains dimensions of arrays 
C
C                INCLUDE 'PARAMAX'
      PARAMETER (MDEP=1,MK=1,MFT=1)  
      COMMON/CCONST/ EE,HH,CC,BK,EM,UU,HCE,HC2,HCK,EK,PI
                
      LOGICAL PHOTO
      REAL NP,M,NATOM,NHYD,NE
      REAL HYDR(MDEP), GAS(MDEP)
      Logical, Save :: FirstTime=.True.
      
      COMMON/ATWT/ ATW,SUM
C               
      COMMON/MODEL/ NE(MDEP),TEMP(MDEP),PE(MDEP),NATOM(MDEP)                
C
      COMMON/OPAC/ M(MDEP),RHO(MDEP),CHE(MFT),SIG(MFT),                    
     ,FRQ(MFT),WT(MFT),PHOTO(MFT),NXTION(MK),BNU(MFT)
C
      COMMON/POPUL/ HTOT(MDEP),NHYD(5,MDEP),NP(MDEP)
C

      If (FirstTime) then ! initializations
         Call Init_sopas
         FirstTime=.False.
      End if

             PE(ID)=PEL
C
             NE(ID)=PEL/TEL/BK
           TEMP(ID)=TEL 
            GAS(ID)=PG  
            
         IF(IHTOT.GT.0) GO TO 1
         
         IF(IHTOT.LT.0) GO TO 2
         
          STOP
          
                
C***************************************************************
C 
C calculate HTOT if IHTOT > 0
C and
C call ionization equilibrium routine 
C       STATP (IHTOT > 0)
C       STATM (IHTOT < 0) 
C
    1  HYDR(ID)=(GAS(ID)-PE(ID))/TEMP(ID)/BK
       
         RHO(ID)=1.66E-24*HYDR(ID)*ATW
C         PRINT *,'sopas RHO=',RHO(ID)
         
         HYDR(ID)=HYDR(ID)/SUM 
            HTOT(ID)=HYDR(ID)
C            PRINT *,HTOT(ID) 
                   
          CALL STATP(ID,IHTOT)
                        
         GO TO 3
  
    2      CALL STATM(ID,IHTOT)     


C****************************************************************
C
C   call opacity routine CHIG 

    3     CONTINUE      

          CALL CHIG(ID,FREQ,CHIO,CHIE,ETA)
c          PRINT *,'absorb. cont. coef. CHIO = ',CHIO
c          PRINT *,'scat.   cont. coef. CHIE = ',CHIE         
c          PRINT *,'emis.   cont. coef. ETA  = ',ETA 
          
          SF=ETA/CHIO 
c          PRINT *,'ETA/CHIO = ',SF
          
c          PRINT *,'Planck =',PLANCK(FREQ,TEL)
          
                   
           RETURN
           END           
             
             
             
             
             
      SUBROUTINE STATM(IDEP,IHTOT)                                      
C                                                                       
C*******************************************************************   
C                                                                       
C STATM finds H_0, H+, H- atoms, and  H2+, H2 molecules                 
C       density RHO  and total number of hydrogen atoms HTOT recomputed 
C       using new chemical composition                                  
C                                                                       
C IHTOT=-1  without molecules                                           
C IHTOT=-2  with molecules                                              
C                                                                       
C NB !   Results are very sensitive to chemical composition             
C        New RHO and P_gas differ from model values                     
C        See: R.I.Kostik, N.G.Shchukina, R.I.Kostik                     
C             The solar iron abundance: not the last word               
C             1995, A. and Ap.                                          
C                                                                      
C*****************************************************************  
C
c            INCLUDE'PARAMAX'
      PARAMETER (MDEP=1,MK=1,MFT=1)  
C   
      IMPLICIT REAL*8(G,Q)                                              
      DOUBLE PRECISION SUM,XMU,AA,BB,UHYD,Y                             
      DOUBLE PRECISION FH,FZE,F1,F2,F3,F4,F5,C1,C2,C3                   
      LOGICAL PHOTO                                                     
      REAL NHYD,NP,NE,NATOM,M                                           
      REAL*8 NLEVEL                                                     
      DIMENSION NELEM(1),KU(1),KEL(1)                                   
      DIMENSION QA(25),TO(25),UO(25),U(2)                               
      DIMENSION ELMENT(25),ALFA(25),AS(25),CHIO(25)                     
      DIMENSION NBELO1(2,25),NTO1(2,25),TO1(248),UO1(248)              
      DIMENSION NLEVEL(30),EXO1(30),GO1(30)                
      DIMENSION QI(30)                                        
      COMMON V(10300) 
C
       COMMON/BION/ BM(MDEP,30)
C                                                  
      COMMON /EQION/ DQI(30,MDEP),DQ(MDEP),DH2P(MDEP),
     ,DH(MDEP),DHM(MDEP)
C          
      COMMON/MODEL/ NE(MDEP),TEMP(MDEP),PE(MDEP),NATOM(MDEP)
C                    
      COMMON/OPAC/ M(MDEP),RHO(MDEP),CHIE(MFT),SIG(MFT),                    
     ,FREQ(MFT),WT(MFT),PHOTO(MFT),NXTION(MK),BNU(MFT)
C                  
      COMMON/POPUL/ HTOT(MDEP),NHYD(5,MDEP),NP(MDEP)
C                          
      EQUIVALENCE(V(2000),NELEM(1)),(V(2001),ELMENT(1)),                
     ,(V(2026),ALFA(1)),(V(2051),AS(1)),(V(2076),CHIO(1))               
      EQUIVALENCE (V(2101),NBELO1(1)),(V(2151),NTO1(1))                 
      EQUIVALENCE (V(2201),KU(1)),(V(2202),TO1(1)),(V(2450),UO1(1))     
      EQUIVALENCE (V(2698),KEL(1)),(V(2699),NLEVEL(1)),                 
     ,(V(2759),EXO1(1)),(V(2789),GO1(1))           
C                                     
      DATA NLH/5/,XK/1.38054E-16/                                       
      KBO=0                                                             
      ID=IDEP                                                        
      ELPRES=PE(ID)                                                  
      T=TEMP(ID)                                                    
      THETA=5040./T                                                  
      Z=2.5*ALOG10(T)                                                 
      Q=0.0                                                          
      SUM=0.0                                                        
      ALF=0.0                                                         
      XMU=0.0                                                        
      NTO=0    
                                                      
C      NLM=NELEM(1)                                                 
C      DO 16 IE=1,NLM 
  
       DO 16 IE=1,NELEM(1)                                               
           QI(IE)=0.0                                                
      XMU=AS(IE)*ALFA(IE)+XMU                                     
      ALF=ALF+ALFA(IE)                                              
      DO 2 IO=1,2                                                   
      NTE=NTO1(IO,IE)                                                
      NB=NBELO1(IO,IE)+KBO                                       
      IF(NTE.GT.1) GO TO 5                                      
      NTO=NTO+1                                                    
   40 U(IO)=UO1(NTO)                                                 
      GO TO 6                                                       
   95 PRLOG=2.0/U(2)                                                
      GO TO 995                                                     
    5 DO 4 IT=1,NTE                                                  
      NTO=NTO+1                                                      
      TO(IT)=TO1(NTO)                                               
      UO(IT)=UO1(NTO)                                               
    4 CONTINUE                                                        
      CALL LININT(TO,UO,NTE,25)                                       
      CALL EVAL(T,U(IO))                                             
      UU=U(IO)                                                      
    6 IF(NBELO1(IO,IE).EQ.0) GO TO 2                                 
   50 DB=0.0                                                          
      KBO=KBO+1                                                      
      DO 8 IB=KBO,NB                                                  
      DB=(BM(ID,IB)-1.0)*GO1(IB)*EXP(-EXO1(IB)/                       
     ,0.8616E-4/T)+DB                                                
    8 CONTINUE                                                         
      U(IO)=U(IO)+DB                                                 
      KBO=NB                                                         
    2 CONTINUE                                                       
      IF(IE.EQ.1) GO TO 10                                            
   60 PRLOG=2.0*U(2)/U(1)                                             
      PRLOG=ALOG10(PRLOG)                                            
      QA(IE)=-CHIO(IE)*THETA+Z-0.4772+PRLOG                          
      QA(IE)=10.0**QA(IE)/ELPRES                                     
      QI(IE)=ALFA(IE)*QA(IE)/(1.0+QA(IE))                           
           Q=Q+QI(IE)                                                
      SUM=SUM+ALFA(IE)                                                
      GO TO 16                                                        
   10 PRLOG=2.0*U(1)/U(2)                                            
      PRLOG=ALOG10(PRLOG)                                         
      QHM=-0.7552*THETA+Z+0.1249-PRLOG                              
      IF(NBELO1(2,1).EQ.0) GO TO 95                                
      J=NBELO1(1,1)+1                                               
      PRLOG=2.0*BM(ID,J)/U(2)                                       
  995 CONTINUE                                                     
      PRLOG=ALOG10(PRLOG)                                         
      QH2=12.533505+(-4.9251644+5.6191273E-02*THETA-                 
     ,3.268766E-03*THETA**2)*THETA-2.0*PRLOG                            
      QH2P=11.206998+(-2.7942767-7.9196803E-02*THETA+                 
     ,2.4790744E-02*THETA**2)*THETA-PRLOG                            
      QHM=10.0**QHM                                                  
      QH2=10.0**QH2                                                  
      QH2P=10.0**QH2P                                               
      QH=0.0                                                         
      DO 15 I=1,16                                                    
      IF(I.GT.NBELO1(2,1)) GO TO 12                                   
   70 IJ=I+NBELO1(1,1)                                               
      BN=BM(ID,IJ)                                                   
   13 AI2=FLOAT(I*I)                                                
      QHN=ALOG10(BN)+ALOG10(AI2)+0.4772-Z+13.595*                   
     ,THETA/AI2                                                       
      QHN=10.0**QHN                                                   
      QH=QH+QHN                                                 
      IF (I.GT.NLH) GO TO 15                                         
      NHYD(I,ID)=ELPRES*QHN                                         
      GO TO 15                                                    
   12 BN=1.0                                                         
      GO TO 13                                                      
   15 CONTINUE                                                          
      UHYD=ELPRES*QH                                                 
   16 CONTINUE                                                       
      XMU=XMU/AS(1)                                                 
      G2=1.0/UHYD                                                    
      G3=ELPRES/QHM                                                  
      F1=1.0/(1.+G2+G3)                                              
      F4=0.0                                                      
      F5=0.0                                                         
      IF(IHTOT.EQ.-1) GO TO 20                                       
      IF(IHTOT.EQ.-2) GO TO 22                                     
      WRITE(6,99999) IHTOT                                       
99999 FORMAT('0 WRONG IHTOT=',I5)                                    
   22 G4=ELPRES/QH2P                                                
      G5=ELPRES/QH2                                                
      AA=1.0+G2+G3                                                  
      D=G2-G3                                                       
      E=G2*(G4/G5)                                                
      BB=2.0*(1.0+E)                                               
      C1=G5*BB**2+AA*D*BB-E*AA**2                                 
      C2=2.0*AA*E-D*BB+AA*BB*Q                                   
      C3=-(E+BB*Q)                                               
      F1=(-C2+DSQRT(C2*C2-4.0*C3*C1))/(2.0*C1)                      
      F5=(1.0-AA*F1)/BB                                          
      F4=E*F5                                                     
   20 F3=G3*F1                                                     
      F2=G2*F1                                                       
      FZE=F2-F3+F4+Q                                                 
         DH(ID)=F2/FZE                                              
        DHM(ID)=-1.*F3/FZE                                            
       DH2P(ID)=F4/FZE                                               
      YGE=1.0+(F1+F2+F3+F4+F5+SUM)/FZE                             
      FH=F1                                                           
      R1=F1/FZE                                                      
       Y=1.+G2+G3                                                      
      IF(IHTOT.EQ.-1) GO TO 21                                        
      IF(IHTOT.EQ.-2) GO TO 23                                         
        WRITE(6,99999) IHTOT                                          
   23 Y=1.0+G2+G3+2.0*G5*R1+2.0*G2*G4*R1                              
   21 HNUM=ELPRES*R1/(XK*T)                                           
      HPNUM=HNUM*G2                                                   
      NP(ID)=HPNUM                                                    
      YHNUM=Y*HNUM                                                   
      HTOT(ID)=YHNUM
      ETOT=YHNUM*FZE
      NE(ID)=ETOT                                                     
      DO 3 IL=1,NLH                                                    
      NHYD(IL,ID)=HPNUM*NHYD(IL,ID)                                  
    3 CONTINUE                                                       
   33 Y=XK*T/ELPRES                                                  
      RHO(ID)=1.67333E-24*XMU/(Y*FZE)
      
C      PRINT *,RHO(ID)
                                       
C      PRINT 55,ID,T,HTOT(ID),F1,F2,F3,F4,F5,Q                         
C      IF(ID.EQ.1) PRINT 5500,ALF                                     
 5500 FORMAT('0 ALFA=',F15.5)                                        
   55 FORMAT(I5,F8.1,7E10.3)       
                                   
C        DO 90 IE=2,NLM 

        DO 90 IE=2,NELEM(1)                                                
        DQI(IE,ID)=QI(IE)/FZE                                           
   90   CONTINUE                                                     
        DQ(ID)=Q/FZE                                                 
      RETURN                                                        
      END                                                            
      SUBROUTINE STATP(IDEP,IHTOT)
C
C*******************************************************************
C
C STATP finds H_0, H+, H- atoms, and  H2+, H2 molecules 
C       density RHO  and total number of hydrogen atoms HTOT 
C       are found from model P_gas and P_e
C
C
C IHTOT=-1  without molecules
C IHTOT=-2  with molecules 
C
C NB !   Results are not sensitive to chemical composition   
C
C*****************************************************************
C
C           INCLUDE 'PARAMAX'
C
      IMPLICIT REAL*8(G,Q)                                              
      PARAMETER (MDEP=1,MK=1,MFT=1)   
      DOUBLE PRECISION SUM,XMU,AA,BB,UHYD,Y                             
      DOUBLE PRECISION FH,FZE,F1,F2,F3,F4,F5,C1,C2,C3                   
      LOGICAL PHOTO                                                     
      REAL NHYD,NP,NE,NATOM,M                                           
      REAL*8 NLEVEL                                                     
      
      DIMENSION V(10300),BM(MDEP,30),DQI(30,MDEP),DQ(MDEP),DH2P(MDEP),DH
     & (MDEP),DHM(MDEP),NE(MDEP),TEMP(MDEP),PE(MDEP),NATOM(MDEP),M(MDEP)
     &     ,RHO(MDEP),CHIE(MFT),SIG(MFT),FREQ(MFT),WT(MFT),PHOTO(MFT)
     &     ,NXTION(MK),BNU(MFT),HTOT(MDEP),NHYD(5,MDEP),NP(MDEP)
      
      DIMENSION NELEM(1),KU(1),KEL(1)                                   
      DIMENSION QA(25),TO(25),UO(25),U(2)                               
      DIMENSION ELMENT(25),ALFA(25),AS(25),CHIO(25)                     
      DIMENSION NBELO1(2,25),NTO1(2,25),TO1(248),UO1(248)               
      DIMENSION NLEVEL(30),EXO1(30),GO1(30)               
      DIMENSION QI(30)                                        
      
      COMMON V
C
      COMMON/BION/ BM
C                                                   
      COMMON /EQION/ DQI,DQ,DH2P,
     ,DH,DHM
C          
      COMMON/MODEL/ NE,TEMP,PE,NATOM 
C                   
      COMMON/OPAC/ M,RHO,CHIE,SIG,                    
     ,FREQ,WT,PHOTO,NXTION,BNU
C                  
      COMMON/POPUL/ HTOT,NHYD,NP
                         
      EQUIVALENCE(V(2000),NELEM(1)),(V(2001),ELMENT(1)),                
     ,(V(2026),ALFA(1)),(V(2051),AS(1)),(V(2076),CHIO(1))               
      EQUIVALENCE (V(2101),NBELO1(1)),(V(2151),NTO1(1))                 
      EQUIVALENCE (V(2201),KU(1)),(V(2202),TO1(1)),(V(2450),UO1(1))     
      EQUIVALENCE (V(2698),KEL(1)),(V(2699),NLEVEL(1)),                 
     ,(V(2759),EXO1(1)),(V(2789),GO1(1))           
C 
C       PRINT *,'start STATPM'                                    
      DATA NLH/5/,XK/1.38054E-16/                                      
      KBO=0                                                             
      ID=IDEP                                                           
      ELPRES=PE(ID)                                                     
      T=TEMP(ID)                                                        
      THETA=5040./T                                                     
      Z=2.5*ALOG10(T)                                                   
      Q=0.0                                                             
      SUM=0.0                                                           
      ALF=0.0                                                           
      XMU=0.0                                                           
      NTO=0                                                             
C      NLM=NELEM(1)                                                     
C      DO 16 IE=1,NLM       
      DO 16 IE=1,NELEM(1)                                                
           QI(IE)=0.0 
C           PRINT *,IE,ALFA(IE)
C           ASA=AS(IE)*ALFA(IE) 
C           PRINT *,ASA                                                
      XMU=AS(IE)*ALFA(IE)+XMU                                           
      ALF=ALF+ALFA(IE)                                                  
      DO 2 IO=1,2                                                       
      NTE=NTO1(IO,IE)                                                   
      NB=NBELO1(IO,IE)+KBO                                              
      IF(NTE.GT.1) GO TO 5                                             
      NTO=NTO+1                                                        
   40 U(IO)=UO1(NTO)                                                    
      GO TO 6                                                           
   95 PRLOG=2.0/U(2)                                                    
      GO TO 995                                                         
    5 DO 4 IT=1,NTE                                                     
      NTO=NTO+1                                                        
      TO(IT)=TO1(NTO)                                                  
      UO(IT)=UO1(NTO)                                                
    4 CONTINUE                                                        
      CALL LININT(TO,UO,NTE,25)                                       
      CALL EVAL(T,U(IO))                                               
      UU=U(IO)                                                        
    6 IF(NBELO1(IO,IE).EQ.0) GO TO 2                                 
   50 DB=0.0                                                         
      KBO=KBO+1                                                       
      DO 8 IB=KBO,NB                                                   
      DB=(BM(ID,IB)-1.0)*GO1(IB)*EXP(-EXO1(IB)/                      
     ,0.8616E-4/T)+DB                                                  
    8 CONTINUE                                                       
      U(IO)=U(IO)+DB                                                  
      KBO=NB                                                          
    2 CONTINUE                                                        
      IF(IE.EQ.1) GO TO 10                                            
   60 PRLOG=2.0*U(2)/U(1)                                            
      PRLOG=ALOG10(PRLOG)                                              
      QA(IE)=-CHIO(IE)*THETA+Z-0.4772+PRLOG                           
      QA(IE)=10.0**QA(IE)/ELPRES                                      
      QI(IE)=ALFA(IE)*QA(IE)/(1.0+QA(IE))                              
           Q=Q+QI(IE)                                                 
      SUM=SUM+ALFA(IE)                                                
      GO TO 16                                                        
   10 PRLOG=2.0*U(1)/U(2)                                               
      PRLOG=ALOG10(PRLOG)                                            
      QHM=-0.7552*THETA+Z+0.1249-PRLOG                                
      IF(NBELO1(2,1).EQ.0) GO TO 95                                   
      J=NBELO1(1,1)+1                                                 
      PRLOG=2.0*BM(ID,J)/U(2)                                         
  995 CONTINUE                                                        
      PRLOG=ALOG10(PRLOG)                                               
      QH2=12.533505+(-4.9251644+5.6191273E-02*THETA-                  
     ,3.268766E-03*THETA**2)*THETA-2.0*PRLOG                         
      QH2P=11.206998+(-2.7942767-7.9196803E-02*THETA+                   
     ,2.4790744E-02*THETA**2)*THETA-PRLOG                             
      QHM=10.0**QHM                                                    
      QH2=10.0**QH2                                                   
      QH2P=10.0**QH2P                                                 
      QH=0.0                                                         
      DO 15 I=1,16                                                   
      IF(I.GT.NBELO1(2,1)) GO TO 12                                   
   70 IJ=I+NBELO1(1,1)                                                
      BN=BM(ID,IJ)                                                  
   13 AI2=FLOAT(I*I)                                                  
      QHN=ALOG10(BN)+ALOG10(AI2)+0.4772-Z+13.595*                    
     ,THETA/AI2                                                      
      QHN=10.0**QHN                                                   
      QH=QH+QHN                                                      
      IF (I.GT.NLH) GO TO 15                                        
      NHYD(I,ID)=ELPRES*QHN                                         
      GO TO 15                                                       
   12 BN=1.0                                                         
      GO TO 13                                                       
   15 CONTINUE                                                       
      UHYD=ELPRES*QH                                                 
   16 CONTINUE                                                        
      XMU=XMU/AS(1)                                                  
      G2=1.0/UHYD                                                   
      G3=ELPRES/QHM                                                  
      F1=1.0/(1.+G2+G3)                                             
      F4=0.0                                                          
      F5=0.0                                                        
      IF(IHTOT.EQ.1) GO TO 20                                         
      IF(IHTOT.EQ.2) GO TO 22                                         
      WRITE(6,99999) IHTOT                                           
99999 FORMAT('0 WRONG IHTOT=',I5)                                     
   22 G4=ELPRES/QH2P                                                
      G5=ELPRES/QH2                                                
      AA=1.0+G2+G3                                                 
      D=G2-G3                                                      
      E=G2*(G4/G5)                                                    
      BB=2.0*(1.0+E)                                                 
      C1=G5*BB**2+AA*D*BB-E*AA**2                                    
      C2=2.0*AA*E-D*BB+AA*BB*Q                                   
      C3=-(E+BB*Q)                                                    
      F1=(-C2+DSQRT(C2*C2-4.0*C3*C1))/(2.0*C1)                        
      F5=(1.0-AA*F1)/BB                                              
      F4=E*F5                                                       
   20 F3=G3*F1                                                        
      F2=G2*F1                                                      
      FZE=F2-F3+F4+Q                                                
         DH(ID)=F2/FZE                                                
        DHM(ID)=-1.*F3/FZE                                           
       DH2P(ID)=F4/FZE                                              
      YGE=1.0+(F1+F2+F3+F4+F5+SUM)/FZE                                
      FH=F1                                                           
      R1=F1/FZE                                                     
       Y=1.+G2+G3                                                    
      IF(IHTOT.EQ.1) GO TO 21                                         
      IF(IHTOT.EQ.2) GO TO 23                                     
        WRITE(6,99999) IHTOT                                         
   23 Y=1.0+G2+G3+2.0*G5*R1+2.0*G2*G4*R1                            
   21 HNUM=HTOT(ID)/Y                                              
      HPNUM=HNUM*G2                                                    
      NP(ID)=HPNUM                                                 
      YHNUM=HTOT(ID)                                                
      NE(ID)=ELPRES/(XK*T)                                          
      DO 3 IL=1,NLH                                                 
      NHYD(IL,ID)=HPNUM*NHYD(IL,ID)                                
    3 CONTINUE                                                      
   33 Y=XK*T/ELPRES                                               
C        PRINT *,'statpm RHO =',RHO(ID)
        
C
C      PRINT 55,ID,T,HTOT(ID),F1,F2,F3,F4,F5,Q                        
C     IF(ID.EQ.1) PRINT 5500,ALF                                     
 5500 FORMAT('0 ALFA=',F15.5)                                       
   55 FORMAT(I5,F8.1,E15.7,6E10.3)                                        
C        DO 90 IE=2,NLM
        DO 90 IE=2,NELEM(1) 
        DQI(IE,ID)=QI(IE)/FZE
   90   CONTINUE
        DQ(ID)=Q/FZE
C               PRINT *,'end STATPM'   
      RETURN                                                         
      END                                                      
